// <auto-generated />
using System;
using Cadastro.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cadastro.Data.Migrations
{
    [DbContext(typeof(CadastroDbContext))]
    [Migration("20230716185046_INSCRICAO_ESTADUAL")]
    partial class INSCRICAO_ESTADUAL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cadastro.Business.Models.AtividadePrincipal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Aliquota")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Anexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Atividade")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("FatorR")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AtividadesPrincipais", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("PaisId");

                    b.ToTable("Cidades", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtividadePrincipalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CNAE")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<Guid>("CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CnpjPrincipal")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CodigoRegimeTributario")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FaturamentoUltimoAnoEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("InscricaoEstadualEstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InscricaoMunicipal")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Isento")
                        .HasColumnType("bit");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PerfilUsuarioMasterAdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuantidadeFuncionarioEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("RepresentanteLegalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SegmentoEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubstitutoTributarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TamanhoEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TamannhoEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("TipoEmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AtividadePrincipalId");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("FaturamentoUltimoAnoEmpresaId");

                    b.HasIndex("InscricaoEstadualEstadoId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("PagamentoId")
                        .IsUnique();

                    b.HasIndex("PaisId");

                    b.HasIndex("PerfilUsuarioMasterAdminId")
                        .IsUnique();

                    b.HasIndex("QuantidadeFuncionarioEmpresaId");

                    b.HasIndex("RepresentanteLegalId");

                    b.HasIndex("SegmentoEmpresaId");

                    b.HasIndex("TamanhoEmpresaId");

                    b.HasIndex("TipoEmpresaId")
                        .IsUnique();

                    b.ToTable("Empresas", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estados", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.FaturamentoUltimoAnoEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FaturamentosUltimoAnoEmpresa", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Fuso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fusos", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Idioma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Idiomas", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.LoginUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LoginUsuarios", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Marcas", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Modulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Modulos", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.ModuloEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataAtivacaoModulo")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModuloId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("ModuloId");

                    b.ToTable("ModulosEmpresa", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.ModuloUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataAtivacaoModulo")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModuloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ModulosUsuario", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("MeioPagamento")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Prazo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Pagamentos", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Paises", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Perfil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Perfis", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.QuantidadeFuncionarioEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("QuantidadesFuncionariosEmpresa", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.RepresentanteLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelefoneResponsavel")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("RepresentantesLegais", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Segmento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Segmentos", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.SubstitutoTributario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId")
                        .IsUnique();

                    b.HasIndex("EstadoId")
                        .IsUnique();

                    b.ToTable("SubstitutosTributario", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.TamanhoEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TamanhosEmpresa", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.TipoEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TiposEmpresa", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FusoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdiomaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LoginUsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("UtcId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FusoId");

                    b.HasIndex("IdiomaId")
                        .IsUnique();

                    b.HasIndex("LoginUsuarioId")
                        .IsUnique();

                    b.HasIndex("PerfilId");

                    b.HasIndex("UtcId")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.UTC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abreviacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInativacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Offset")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("UTC", (string)null);
                });

            modelBuilder.Entity("Cadastro.Business.Models.Cidade", b =>
                {
                    b.HasOne("Cadastro.Business.Models.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Pais", "Pais")
                        .WithMany("Cidades")
                        .HasForeignKey("PaisId")
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Empresa", b =>
                {
                    b.HasOne("Cadastro.Business.Models.AtividadePrincipal", "AtividadePrincipal")
                        .WithMany("Empresas")
                        .HasForeignKey("AtividadePrincipalId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Cidade", "Cidade")
                        .WithMany("Empresas")
                        .HasForeignKey("CidadeId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Estado", "Estado")
                        .WithMany("Empresas")
                        .HasForeignKey("EstadoId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.FaturamentoUltimoAnoEmpresa", "FaturamentoUltimoAnoEmpresa")
                        .WithMany("Empresas")
                        .HasForeignKey("FaturamentoUltimoAnoEmpresaId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Estado", "InscricaoEstadualEstado")
                        .WithMany("EmpresasInscricaoEstadual")
                        .HasForeignKey("InscricaoEstadualEstadoId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Marca", "Marca")
                        .WithMany("Empresas")
                        .HasForeignKey("MarcaId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Pagamento", "Pagamento")
                        .WithOne("Empresa")
                        .HasForeignKey("Cadastro.Business.Models.Empresa", "PagamentoId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Pais", "Pais")
                        .WithMany("Empresas")
                        .HasForeignKey("PaisId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Usuario", "PerfilUsuarioMasterAdmin")
                        .WithOne("Empresa")
                        .HasForeignKey("Cadastro.Business.Models.Empresa", "PerfilUsuarioMasterAdminId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.QuantidadeFuncionarioEmpresa", "QuantidadeFuncionarioEmpresa")
                        .WithMany("Empresas")
                        .HasForeignKey("QuantidadeFuncionarioEmpresaId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.RepresentanteLegal", "RepresentanteLegal")
                        .WithMany("Empresas")
                        .HasForeignKey("RepresentanteLegalId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Segmento", "SegmentoEmpresa")
                        .WithMany("Empresas")
                        .HasForeignKey("SegmentoEmpresaId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.TamanhoEmpresa", "TamanhoEmpresa")
                        .WithMany("Empresas")
                        .HasForeignKey("TamanhoEmpresaId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.TipoEmpresa", "TipoEmpresa")
                        .WithOne("Empresa")
                        .HasForeignKey("Cadastro.Business.Models.Empresa", "TipoEmpresaId")
                        .IsRequired();

                    b.Navigation("AtividadePrincipal");

                    b.Navigation("Cidade");

                    b.Navigation("Estado");

                    b.Navigation("FaturamentoUltimoAnoEmpresa");

                    b.Navigation("InscricaoEstadualEstado");

                    b.Navigation("Marca");

                    b.Navigation("Pagamento");

                    b.Navigation("Pais");

                    b.Navigation("PerfilUsuarioMasterAdmin");

                    b.Navigation("QuantidadeFuncionarioEmpresa");

                    b.Navigation("RepresentanteLegal");

                    b.Navigation("SegmentoEmpresa");

                    b.Navigation("TamanhoEmpresa");

                    b.Navigation("TipoEmpresa");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Estado", b =>
                {
                    b.HasOne("Cadastro.Business.Models.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("PaisId")
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Cadastro.Business.Models.ModuloEmpresa", b =>
                {
                    b.HasOne("Cadastro.Business.Models.Empresa", "Empresa")
                        .WithMany("ModulosAtivos")
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Modulo", "Modulo")
                        .WithMany("ModulosAtivos")
                        .HasForeignKey("ModuloId")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("Cadastro.Business.Models.ModuloUsuario", b =>
                {
                    b.HasOne("Cadastro.Business.Models.Modulo", "Modulo")
                        .WithMany("ModulosUsuario")
                        .HasForeignKey("ModuloId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Usuario", "Usuario")
                        .WithMany("ModulosUsuario")
                        .HasForeignKey("UsuarioId")
                        .IsRequired();

                    b.Navigation("Modulo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Cadastro.Business.Models.SubstitutoTributario", b =>
                {
                    b.HasOne("Cadastro.Business.Models.Empresa", "Empresa")
                        .WithOne("SubstitutoTributario")
                        .HasForeignKey("Cadastro.Business.Models.SubstitutoTributario", "EmpresaId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Estado", "Estado")
                        .WithOne("SubstitutoTributario")
                        .HasForeignKey("Cadastro.Business.Models.SubstitutoTributario", "EstadoId")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Usuario", b =>
                {
                    b.HasOne("Cadastro.Business.Models.Fuso", "Fuso")
                        .WithMany("Usuarios")
                        .HasForeignKey("FusoId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Idioma", "Idioma")
                        .WithOne("Usuario")
                        .HasForeignKey("Cadastro.Business.Models.Usuario", "IdiomaId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.LoginUsuario", "LoginUsuario")
                        .WithOne("Usuario")
                        .HasForeignKey("Cadastro.Business.Models.Usuario", "LoginUsuarioId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId")
                        .IsRequired();

                    b.HasOne("Cadastro.Business.Models.UTC", "UTC")
                        .WithOne("Usuario")
                        .HasForeignKey("Cadastro.Business.Models.Usuario", "UtcId")
                        .IsRequired();

                    b.Navigation("Fuso");

                    b.Navigation("Idioma");

                    b.Navigation("LoginUsuario");

                    b.Navigation("Perfil");

                    b.Navigation("UTC");
                });

            modelBuilder.Entity("Cadastro.Business.Models.AtividadePrincipal", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Cidade", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Empresa", b =>
                {
                    b.Navigation("ModulosAtivos");

                    b.Navigation("SubstitutoTributario")
                        .IsRequired();
                });

            modelBuilder.Entity("Cadastro.Business.Models.Estado", b =>
                {
                    b.Navigation("Cidades");

                    b.Navigation("Empresas");

                    b.Navigation("EmpresasInscricaoEstadual");

                    b.Navigation("SubstitutoTributario")
                        .IsRequired();
                });

            modelBuilder.Entity("Cadastro.Business.Models.FaturamentoUltimoAnoEmpresa", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Fuso", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Idioma", b =>
                {
                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("Cadastro.Business.Models.LoginUsuario", b =>
                {
                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("Cadastro.Business.Models.Marca", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Modulo", b =>
                {
                    b.Navigation("ModulosAtivos");

                    b.Navigation("ModulosUsuario");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Pagamento", b =>
                {
                    b.Navigation("Empresa")
                        .IsRequired();
                });

            modelBuilder.Entity("Cadastro.Business.Models.Pais", b =>
                {
                    b.Navigation("Cidades");

                    b.Navigation("Empresas");

                    b.Navigation("Estados");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Perfil", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Cadastro.Business.Models.QuantidadeFuncionarioEmpresa", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Cadastro.Business.Models.RepresentanteLegal", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Cadastro.Business.Models.Segmento", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Cadastro.Business.Models.TamanhoEmpresa", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("Cadastro.Business.Models.TipoEmpresa", b =>
                {
                    b.Navigation("Empresa")
                        .IsRequired();
                });

            modelBuilder.Entity("Cadastro.Business.Models.Usuario", b =>
                {
                    b.Navigation("Empresa")
                        .IsRequired();

                    b.Navigation("ModulosUsuario");
                });

            modelBuilder.Entity("Cadastro.Business.Models.UTC", b =>
                {
                    b.Navigation("Usuario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
